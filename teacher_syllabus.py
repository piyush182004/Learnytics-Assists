import ollama
import wandb
from fpdf import FPDF
import time

wandb.login(key="e4c42d08e0619b99531d9876746df3d9ce5026b4")

def generate_syllabus(age, difficulty, study_hours, additional_notes):
    start_time = time.time()  # Start timing
    wandb.init(project="dyslexia-app", name="generate-syllabus", reinit=True)
    
    response = ollama.chat(model='gemma:2b', messages=[
        {"role": "system", "content": "Generate a comprehensive syllabus for dyslexic students with clear structure, short paragraphs, and simple language."},
        {"role": "user", "content": f"Create a dyslexia-friendly syllabus for students age {age}, difficulty level {difficulty}, with {study_hours} study hours per week. Additional requirements: {additional_notes}"}
    ])

    syllabus_content = response['message']['content']
    
    # Create dyslexia-friendly PDF
    pdf = create_dyslexic_friendly_pdf(syllabus_content, f"Syllabus for Age {age} - {difficulty} Level")

    pdf_path = "outputs/syllabus.pdf"
    pdf.output(pdf_path, 'F')  # Ensure the PDF is saved properly

    execution_time = time.time() - start_time  # Calculate execution time

    # Create and log the artifact
    artifact = wandb.Artifact("syllabus", type="output")
    artifact.add_file(pdf_path)
    wandb.log_artifact(artifact)

    # Log metadata
    wandb.log({
        "age": age,
        "difficulty": difficulty,
        "study_hours": study_hours,
        "additional_notes": additional_notes,
        "execution_time": execution_time,
        "syllabus_content": syllabus_content
    })
    wandb.finish()
    return pdf_path

def create_dyslexic_friendly_pdf(content, title):
    pdf = FPDF()
    pdf.add_page()
    
    # Set colors for dyslexia-friendly design
    pdf.set_fill_color(255, 252, 231)  # Light yellow background
    pdf.rect(0, 0, 210, 297, 'F')  # Fill page with background color
    
    # Add title
    pdf.set_font("Arial", 'B', 24)
    pdf.set_text_color(106, 17, 203)  # Purple text
    pdf.cell(0, 20, title, 0, 1, 'C')
    pdf.ln(10)
    
    # Add content with dyslexia-friendly formatting
    pdf.set_font("Arial", '', 14)  # Larger font for readability
    pdf.set_text_color(0, 0, 0)  # Black text
    
    # Process content by paragraph
    paragraphs = content.split('\n\n')
    for paragraph in paragraphs:
        if paragraph.strip():
            # Check if this is a heading (starts with # or is in all caps)
            if paragraph.startswith('#') or paragraph.isupper():
                pdf.set_font("Arial", 'B', 16)
                pdf.set_text_color(106, 17, 203)  # Purple for headings
                pdf.multi_cell(0, 10, paragraph.replace('#', '').strip(), 0, 'L')
                pdf.set_font("Arial", '', 14)
                pdf.set_text_color(0, 0, 0)  # Reset to black
            else:
                pdf.multi_cell(0, 10, paragraph, 0, 'L')
            pdf.ln(5)
    
    # Add footer
    pdf.set_y(270)
    pdf.set_font("Arial", 'I', 10)
    pdf.set_text_color(128, 128, 128)  # Gray
    pdf.cell(0, 10, "Generated by LearnlyticAssist - Dyslexia-Friendly Learning Platform", 0, 0, 'C')
    
    return pdf
